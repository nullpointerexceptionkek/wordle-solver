/*! For license information please see paste.js.LICENSE.txt */
!async function(e=50,t=3500){function o(){let e,t;if(e=document.querySelector(".Board-module_board__jeoPS"),e)t=e.querySelectorAll(".Row-module_row__pwpBq");else{const o=document.querySelector("game-app")?.shadowRoot;e=o?o.querySelector("#board"):null,t=e?e.querySelectorAll("game-row"):null}if(!t)return console.error("Board or rows not found!"),null;const o={rows:[],absentLetters:[],presentLetters:[],correctLetters:[],correctPositions:Array(5).fill(null),presentPositions:[]};return t.forEach((t=>{const r=[];(e.classList.contains("Board-module_board__jeoPS")?t.querySelectorAll("[data-testid='tile']"):t.shadowRoot?t.shadowRoot.querySelectorAll("game-tile"):[]).forEach(((t,s)=>{const n=e.classList.contains("Board-module_board__jeoPS")?t.innerText.toLowerCase():t.getAttribute("letter")?.toLowerCase()||"",c=e.classList.contains("Board-module_board__jeoPS")?t.getAttribute("data-state"):t.getAttribute("evaluation")||"empty";n?(r.push({letter:n,state:c}),"absent"===c?o.absentLetters.push(n):"present"===c?(o.presentLetters.push(n),o.presentPositions.push({letter:n,position:s})):"correct"===c&&(o.correctLetters.push(n),o.correctPositions[s]=n)):r.push({letter:"",state:"empty"})})),o.rows.push(r)})),o.absentLetters=[...new Set(o.absentLetters)],o.presentLetters=[...new Set(o.presentLetters)],o.correctLetters=[...new Set(o.correctLetters)],o}function r(e,t){return e.filter((e=>{const o=e.split("");for(let e=0;e<5;e++){const r=o[e];if(t.correctPositions[e]&&r!==t.correctPositions[e])return!1;if(t.absentLetters.includes(r)&&!t.correctLetters.includes(r)&&!t.presentLetters.includes(r))return!1;for(const o of t.presentPositions)if(o.position===e&&r===o.letter)return!1}for(const r of t.presentPositions){if(!e.includes(r.letter))return!1;if(o[r.position]===r.letter)return!1}for(const[e,r]of t.correctPositions.entries())if(r&&o[e]!==r)return!1;return!0}))}function s(e){return e.sort(((e,t)=>{const o=new Set(e).size;return new Set(t).size-o}))}function n(e){const t={key:e,code:"Backspace"===e?"Backspace":`Key${e.toUpperCase()}`,keyCode:"Backspace"===e?8:e.toUpperCase().charCodeAt(0),which:"Backspace"===e?8:e.toUpperCase().charCodeAt(0),bubbles:!0,cancelable:!0};document.dispatchEvent(new KeyboardEvent("keydown",t)),document.dispatchEvent(new KeyboardEvent("keypress",t)),document.dispatchEvent(new KeyboardEvent("keyup",t))}async function c(){for(let t=0;t<5;t++)n("Backspace"),await new Promise((t=>setTimeout(t,e/2)))}async function a(e,t,r){await c();for(let o of e)n(o),await new Promise((e=>setTimeout(e,t)));const s=o(),a={key:"Enter",code:"Enter",keyCode:13,which:13,bubbles:!0,cancelable:!0};document.dispatchEvent(new KeyboardEvent("keydown",a)),document.dispatchEvent(new KeyboardEvent("keypress",a)),document.dispatchEvent(new KeyboardEvent("keyup",a)),await new Promise((e=>setTimeout(e,r)));const i=o();return JSON.stringify(s)!==JSON.stringify(i)}const i=await async function(){try{const e=await fetch("https://raw.githubusercontent.com/words/an-array-of-english-words/refs/heads/master/index.json");return e.ok?(await e.json()).filter((e=>5===e.length)):(console.error("Failed to fetch word list:",e.statusText),[])}catch(e){return console.error("Error:",e),[]}}();let l=o(),u=r(i,l),d="tales",p=!0;for(let n=0;n<6;n++){const c=l.rows.every((e=>e.every((e=>"empty"===e.state))));if(p&&c?(d="tales",p=!1):d=s(u)[0]||"tales",console.log(`Attempt ${n+1}: Trying "${d}"`),await a(d,e,t)){if(l=o(),5===l.correctLetters.length)return void console.log("Wordle solved:",d);if(u=r(u,l),0===u.length)return void console.log("No possible words left to try.");p=!1}else console.log(`Word "${d}" was not accepted. Trying next word.`),u=u.filter((e=>e!==d)),d=s(u)[0]||"tales"}console.log("Failed to solve Wordle within 6 attempts.")}();